'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SocketIOError = exports.TimeoutError = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

exports.convertErrorToObject = convertErrorToObject;
exports.convertObjectToError = convertObjectToError;

var _serializeError = require('serialize-error');

var _serializeError2 = _interopRequireDefault(_serializeError);

var _deserializeError = require('deserialize-error');

var _deserializeError2 = _interopRequireDefault(_deserializeError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// convert (nested) Error object to Plain object to send via socket.io
function convertErrorToObject(err) {
  if (err instanceof Error) return (0, _serializeError2.default)(err);
  if (err instanceof Array) return err.map(_serializeError2.default);
  var obj = {};
  for (var k in err) {
    if (err.hasOwnProperty(k)) {
      obj[k] = (0, _serializeError2.default)(err[k]);
    }
  }
  return obj;
}

// convert nested object to Error
function convertObjectToError(obj) {
  if (obj instanceof Error) return obj;
  if (obj instanceof Array) return obj.map(_deserializeError2.default);
  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== "object") return obj;
  var err = (0, _deserializeError2.default)(obj);
  if (err !== obj) return err;
  err = {};
  for (var k in obj) {
    err[k] = (0, _deserializeError2.default)(obj[k]);
  }
  return err;
}

var TimeoutError = exports.TimeoutError = function (_Error) {
  _inherits(TimeoutError, _Error);

  function TimeoutError(message) {
    _classCallCheck(this, TimeoutError);

    var _this = _possibleConstructorReturn(this, (TimeoutError.__proto__ || Object.getPrototypeOf(TimeoutError)).call(this, message));

    _this.name = 'TimeoutError';
    return _this;
  }

  return TimeoutError;
}(Error);

var SocketIOError = exports.SocketIOError = function (_Error2) {
  _inherits(SocketIOError, _Error2);

  function SocketIOError(message) {
    _classCallCheck(this, SocketIOError);

    var _this2 = _possibleConstructorReturn(this, (SocketIOError.__proto__ || Object.getPrototypeOf(SocketIOError)).call(this, message));

    _this2.name = 'Socket.IO Error';
    return _this2;
  }

  return SocketIOError;
}(Error);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9lcnJvci5lczYiXSwibmFtZXMiOlsiY29udmVydEVycm9yVG9PYmplY3QiLCJjb252ZXJ0T2JqZWN0VG9FcnJvciIsImVyciIsIkVycm9yIiwiQXJyYXkiLCJtYXAiLCJvYmoiLCJrIiwiaGFzT3duUHJvcGVydHkiLCJUaW1lb3V0RXJyb3IiLCJtZXNzYWdlIiwibmFtZSIsIlNvY2tldElPRXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztRQUlnQkEsb0IsR0FBQUEsb0I7UUFhQUMsb0IsR0FBQUEsb0I7O0FBakJoQjs7OztBQUNBOzs7Ozs7Ozs7Ozs7QUFFQTtBQUNPLFNBQVNELG9CQUFULENBQStCRSxHQUEvQixFQUFvQztBQUN6QyxNQUFHQSxlQUFlQyxLQUFsQixFQUF5QixPQUFPLDhCQUFlRCxHQUFmLENBQVA7QUFDekIsTUFBR0EsZUFBZUUsS0FBbEIsRUFBeUIsT0FBT0YsSUFBSUcsR0FBSiwwQkFBUDtBQUN6QixNQUFJQyxNQUFNLEVBQVY7QUFDQSxPQUFJLElBQUlDLENBQVIsSUFBYUwsR0FBYixFQUFpQjtBQUNmLFFBQUdBLElBQUlNLGNBQUosQ0FBbUJELENBQW5CLENBQUgsRUFBeUI7QUFDdkJELFVBQUlDLENBQUosSUFBUyw4QkFBZUwsSUFBSUssQ0FBSixDQUFmLENBQVQ7QUFDRDtBQUNGO0FBQ0QsU0FBT0QsR0FBUDtBQUNEOztBQUVEO0FBQ08sU0FBU0wsb0JBQVQsQ0FBK0JLLEdBQS9CLEVBQW9DO0FBQ3pDLE1BQUlBLGVBQWVILEtBQW5CLEVBQTBCLE9BQU9HLEdBQVA7QUFDMUIsTUFBSUEsZUFBZUYsS0FBbkIsRUFBMEIsT0FBT0UsSUFBSUQsR0FBSiw0QkFBUDtBQUMxQixNQUFJLFFBQU9DLEdBQVAseUNBQU9BLEdBQVAsT0FBZSxRQUFuQixFQUE2QixPQUFPQSxHQUFQO0FBQzdCLE1BQUlKLE1BQU0sZ0NBQWlCSSxHQUFqQixDQUFWO0FBQ0EsTUFBSUosUUFBUUksR0FBWixFQUFpQixPQUFPSixHQUFQO0FBQ2pCQSxRQUFNLEVBQU47QUFDQSxPQUFLLElBQUlLLENBQVQsSUFBY0QsR0FBZCxFQUFtQjtBQUNqQkosUUFBSUssQ0FBSixJQUFTLGdDQUFpQkQsSUFBSUMsQ0FBSixDQUFqQixDQUFUO0FBQ0Q7QUFDRCxTQUFPTCxHQUFQO0FBQ0Q7O0lBRVlPLFksV0FBQUEsWTs7O0FBQ1gsd0JBQVlDLE9BQVosRUFBb0I7QUFBQTs7QUFBQSw0SEFDWkEsT0FEWTs7QUFFbEIsVUFBS0MsSUFBTCxHQUFZLGNBQVo7QUFGa0I7QUFHbkI7OztFQUorQlIsSzs7SUFPckJTLGEsV0FBQUEsYTs7O0FBQ1gseUJBQVlGLE9BQVosRUFBb0I7QUFBQTs7QUFBQSwrSEFDWkEsT0FEWTs7QUFFbEIsV0FBS0MsSUFBTCxHQUFZLGlCQUFaO0FBRmtCO0FBR25COzs7RUFKZ0NSLEsiLCJmaWxlIjoiZXJyb3IuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc2VyaWFsaXplRXJyb3IgZnJvbSAnc2VyaWFsaXplLWVycm9yJztcbmltcG9ydCBkZXNlcmlhbGl6ZUVycm9yIGZyb20gJ2Rlc2VyaWFsaXplLWVycm9yJztcblxuLy8gY29udmVydCAobmVzdGVkKSBFcnJvciBvYmplY3QgdG8gUGxhaW4gb2JqZWN0IHRvIHNlbmQgdmlhIHNvY2tldC5pb1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRFcnJvclRvT2JqZWN0IChlcnIpIHtcbiAgaWYoZXJyIGluc3RhbmNlb2YgRXJyb3IpIHJldHVybiBzZXJpYWxpemVFcnJvcihlcnIpO1xuICBpZihlcnIgaW5zdGFuY2VvZiBBcnJheSkgcmV0dXJuIGVyci5tYXAoc2VyaWFsaXplRXJyb3IpO1xuICBsZXQgb2JqID0ge307XG4gIGZvcihsZXQgayBpbiBlcnIpe1xuICAgIGlmKGVyci5oYXNPd25Qcm9wZXJ0eShrKSl7XG4gICAgICBvYmpba10gPSBzZXJpYWxpemVFcnJvcihlcnJba10pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gb2JqO1xufVxuXG4vLyBjb252ZXJ0IG5lc3RlZCBvYmplY3QgdG8gRXJyb3JcbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0T2JqZWN0VG9FcnJvciAob2JqKSB7XG4gIGlmIChvYmogaW5zdGFuY2VvZiBFcnJvcikgcmV0dXJuIG9iajtcbiAgaWYgKG9iaiBpbnN0YW5jZW9mIEFycmF5KSByZXR1cm4gb2JqLm1hcChkZXNlcmlhbGl6ZUVycm9yKTtcbiAgaWYgKHR5cGVvZiBvYmogIT09IFwib2JqZWN0XCIpIHJldHVybiBvYmo7XG4gIGxldCBlcnIgPSBkZXNlcmlhbGl6ZUVycm9yKG9iaik7XG4gIGlmIChlcnIgIT09IG9iaikgcmV0dXJuIGVycjtcbiAgZXJyID0ge307XG4gIGZvciAobGV0IGsgaW4gb2JqKSB7XG4gICAgZXJyW2tdID0gZGVzZXJpYWxpemVFcnJvcihvYmpba10pO1xuICB9XG4gIHJldHVybiBlcnI7XG59XG5cbmV4cG9ydCBjbGFzcyBUaW1lb3V0RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2Upe1xuICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgIHRoaXMubmFtZSA9ICdUaW1lb3V0RXJyb3InO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBTb2NrZXRJT0Vycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihtZXNzYWdlKXtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLm5hbWUgPSAnU29ja2V0LklPIEVycm9yJztcbiAgfVxufVxuXG4iXX0=